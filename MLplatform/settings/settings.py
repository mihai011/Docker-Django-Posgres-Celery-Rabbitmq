"""
Django settings for MLplatform project.

Generated by 'django-admin startproject' using Django 2.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

# Standard Library
import os

from celery.schedules import crontab


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'vq9#+%6z%_lauv7q2tfu5lb%pxlat&rdmmt1y5886ed#ob00!f'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = os.path.join(BASE_DIR,"static")


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_celery_results',
    'MLplatform.core'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'MLplatform.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, 'MLplatform/templates')
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'MLplatform.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'HOST': 'db',
        'PORT': '5432',
        'NAME': 'app',
        'USER': 'postgres',
        'PASSWORD': 'postgres',
        'ATOMIC_REQUESTS': True,
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True



<<<<<<< HEAD:MLplatform/settings.py
=======
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
>>>>>>> 07b38e0bc3ae892e1f5163c9b0791a1b691a33ea:MLplatform/settings/settings.py

# Celery properties
CELERY_BROKER_URL = 'amqp://admin:admin@rabbit:5672//'
# CELERY_RESULT_BACKEND = 'db+postgresql+psycopg2://postgres:postgres@db:5432/app'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = "mailhog"
EMAIL_PORT = 1025


# trying to make manual routing 

# CELERY_TIMEZONE = TIME_ZONE
# # CELERY_ACCEPT_CONTENT = ['json', 'pickle']
# CELERY_TASK_RESULT_EXPIRES = 60  # 1 mins
# CELERYD_CONCURRENCY = 2
# CELERYD_MAX_TASKS_PER_CHILD = 4
# CELERYD_PREFETCH_MULTIPLIER = 1
# # CELERY_DEFAULT_QUEUE = 'easy'
# # CELERY_DEFAULT_EXCHANGE_TYPE = 'topic'
# # CELERY_DEFAULT_ROUTING_KEY = 'easy'

# CELERY_QUEUES = (
#     Queue('easy', Exchange('easy'), routing_key='easy'),
#     Queue('medium', Exchange('medium'), routing_key='medium'),
#     Queue('heavy', Exchange('heavy'), routing_key='heavy'),
# )

# CELERY_ROUTES = {

#     'composeexample.core.tasks.create_random_user_accounts': {
#         'queue': 'heavy',
#         'routing_key': 'heavy',
#     },
#    'composeexample.core.tasks.create_random_name': {
#         'queue': 'medium',
#         'routing_key': 'medium'
#    },
#    'composeexample.core.tasks.create_random_number': {
#         'queue': 'easy',
#         'routing_key': 'easy'
#    }

# }

# CELERYBEAT_SCHEDULE = {

#     'heavy': {
#         'task': 'composeexample.core.tasks.create_random_user_accounts',
#         'schedule': crontab(minute='*/3')
#     },

#     'medium': {
#         'task': 'composeexample.core.tasks.create_random_name',
#         'schedule': crontab(minute='*/2')
#     },

#     'easy': {
#         'task': 'composeexample.core.tasks.create_random_user_number',
#         'schedule': crontab(minute='*/1')
#     },
# }

